# Initially created by following https://orchid00.github.io/actions_sandbox/packageci.html#set-up-package
# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/R-CMD-check.yaml'
      - 'R/**/*'
      - 'inst/**/*'
      - 'man/**/*'
      - '.Rbuildignore'
      - 'DESCRIPTION'
      - 'NAMESPACE'
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/R-CMD-check.yaml'
      - 'R/**/*'
      - 'inst/**/*'
      - 'man/**/*'
      - '.Rbuildignore'
      - 'DESCRIPTION'
      - 'NAMESPACE'

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-20.04, r: '3.6.3'}
          - {os: ubuntu-20.04, r: '4.1.1'}
          # CRAN submission required to use this R version
          - {os: ubuntu-20.04, r: 'release'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: https://packagemanager.rstudio.com/cran/__linux__/focal/latest

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Restore R package cache
        uses: actions/cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      # TODO use when introducing tests (https://github.com/process-analytics/bpmn-visualization-R/issues/6)
      # - name: Show testthat output
      #   if: always()
      #   run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
      #   shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.config.os }}-r${{ matrix.config.r }}-check-results
          path: check

# ######################################################################################################################
# Package submission checks
# https://cran.r-project.org/web/packages/policies.html#Submission
# ######################################################################################################################
      - name: Build the source package
        run: |
          R CMD build .
          ls -la
      - name: Upload the source package
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.config.os }}-r${{ matrix.config.r }}-source-package
          path: bpmnVisualization_*.tar.gz


      #  Sets up LaTeX with tinytex, for PDF generation
      # not needed before as the checks on the repo sources are done with --no-manual
      - uses: r-lib/actions/setup-tinytex@v1

      - name: Check the source package
        id: source_package_checks
        run: R CMD check --as-cran bpmnVisualization_*.tar.gz

      - name: Upload source package check results
        if: ${{ failure() && steps.source_package_checks.outcome == 'failure' }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.config.os }}-r${{ matrix.config.r }}-source-package-check-results
          path: bpmnVisualization.Rcheck
